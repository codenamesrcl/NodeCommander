{
  "version": 3,
  "file": "nodetools.min.js",
  "sources": [
    "../ServerManager/app/nodetools/nodetools.js",
    "../ServerManager/app/nodetools/services/execFactory.js",
    "../ServerManager/app/nodetools/services/fs.js",
    "../ServerManager/app/nodetools/services/process.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACb
  "sourcesContent": [
    "(function () {\r\n    'use strict';\r\n\r\n    angular.module('nodetools', [\r\n        // Angular modules \r\n\r\n        // Custom modules \r\n\r\n        // 3rd Party Modules\r\n        \r\n    ]);\r\n\r\n    \r\n}());",
    "(function(){\r\n\t'use strict'\r\n\r\n\t/**\r\n\t*\r\n\t* @ngdoc factory\r\n\t* @module  nodetools\r\n\t* @name  execFactory\r\n\t*\r\n\t* \r\n\t* @description\r\n\t* Exposes exec child_processes to angular\r\n\t* Very powerful stuff \r\n\t* Users should be familiar with a cli and/or Node's REPL before\r\n\t* using within angular\r\n\t*/\r\n\r\n\tangular \r\n\t\t.module('nodetools')\r\n\t\t.factory('execFactory', factory);\r\n\r\n\r\n\tfunction factory(){\r\n\t\tvar service = {\r\n\t\t\tnewRunner: newRunner\r\n\t\t};\r\n\r\n\r\n\t\tfunction newRunner(command, config, eventHandler){\r\n\t\t\t//create a new command object and return it\r\n\t\t\t//back to the caller\r\n\t\t\tvar runner = new ExecRunner(command, config, eventHandler);\r\n\t\t\treturn runner;\r\n\t\t}\r\n\r\n\r\n\t\treturn service;\r\n\t}\r\n\r\n\r\n\tvar _ = require(\"lodash\");\r\n\r\n\r\n\tfunction ExecRunner(command, config, eventHandler){\r\n\t\tthis.command = command;\r\n\t\tthis.commandConfig = config;\r\n\t\tthis.eventHandler = eventHandler;\r\n\t\tthis.stdout = [];\r\n\t\tthis.instance = null;\r\n\t\tthis.logLimit = 100;\r\n\t\tthis.isRunning = false;\r\n\t}\r\n\tExecRunner.prototype.run = function(){\r\n\r\n\t\tvar __addStdOut = function (data){\r\n\t\t\tif(!this.eventHandler){\r\n\t\t\t\tthis.stdout.push(data);\r\n\t\t\t\tthis.stdout = _.takeRight(this.stdout, this.logLimit);\r\n\t\t\t}\r\n\t\t}.bind(this);\r\n\r\n\t\tif(this.instance != null){\r\n\t\t\tconsole.log('instance is not null');\r\n\t\t\tthis.kill();\r\n\t\t}\r\n\r\n\t\tthis.stdout = [];\r\n\t\tvar exec = require('child_process').exec;\r\n\r\n\t\tconsole.log(this.commandConfig);\r\n\t\tthis.instance = exec(this.command,\r\n\t\t\tthis.commandConfig,\r\n\t\t\tfunction (error, stdout, stderr) {}.bind(this)\r\n\t\t);\r\n\t\t\r\n\t\tthis.isRunning = true;\r\n\r\n\t\tthis.instance.stdout.on('data', function (data) {\r\n\t\t\t__addStdOut(data);\r\n\t\t\tif(this.eventHandler){\r\n\t\t\t\tthis.eventHandler(\"stdout.data\", data);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\r\n\t\tthis.instance.on('close', function (code) {\r\n\t\t\t//this.stdout.push('child process exited with code ' + code);\r\n\t\t\tthis.isRunning = false;\r\n\t\t\tif(this.eventHandler){\r\n\t\t\t\tthis.eventHandler(\"close\", code);\r\n\t\t\t}\r\n\t\t}.bind(this));\r\n\r\n\t\tthis.instance.on('exit', function(code){\r\n\t\t\t//this.stdout.push(\"exited clientportal-watch with code \" + code);\r\n\t\t\tthis.isRunning = false;\r\n\t\t\tif(this.eventHandler){\r\n\t\t\t\tthis.eventHandler(\"exit\", code);\r\n\t\t\t}\r\n\t\t\tthis.instance = null;\r\n\t\t}.bind(this));\r\n\t}\r\n\tExecRunner.prototype.kill = function(){\r\n\t\tvar execKiller = require(\"tree-kill\");\r\n\t\t\r\n\t\tif(this.instance){\r\n\t\t\texecKiller(this.instance.pid, 'SIGKILL', function(err) {\r\n\t\t\t    // Do things \r\n\t\t\t});\r\n\t\t\t//this.instance.kill('SIGTERM');\r\n\t\t}\r\n\t}\r\n\tExecRunner.prototype.setCommand = function(command, run){\r\n\t\tthis.command = command;\r\n\t\tif(run){ this.run(); }\r\n\t\telse{ if(this.instance){ this.kill(); } }\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}());",
    "(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     *\r\n     * @ngdoc factory\r\n     * @module nodetools\r\n     * @name nodetools.fs\r\n     * \r\n     * \r\n     * @description\r\n     * Exposes some basic filesystem operations\r\n     * to angular\r\n     */\r\n    angular\r\n        .module('nodetools')\r\n        .factory('nodetools.fs', fs);\r\n\r\n    //fs.$inject = ['$q'];\r\n\r\n    function fs() {\r\n        var builderScanner = require(process.cwd() + '/lib/utility/builderScanner');\r\n\r\n        var service = {\r\n       \t\tgetDirectoryContents: builderScanner.getDirectoryContents,\r\n        };\r\n\r\n        return service;\r\n\r\n    }\r\n})();",
    "(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     *\r\n     * @ngdoc factory\r\n     * @module  nodetools\r\n     * @name  nodetools.process\r\n     * \r\n     * @requires  $q\r\n     * \r\n     * @description\r\n     * Exposes aspects of node's process module to angular\r\n     */\r\n    angular\r\n        .module('nodetools')\r\n        .factory('nodetools.process', Process);\r\n\r\n    Process.$inject = ['$q'];\r\n\r\n    function Process($q) {\r\n        var service = {\r\n       \t\tgetCwd: function(){ return process.cwd(); }\r\n        };\r\n\r\n        return service;\r\n\r\n    }\r\n})();"
  ]
}